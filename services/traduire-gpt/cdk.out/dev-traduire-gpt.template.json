{
 "Resources": {
  "translateTabletranslateTableddbtraduiregptdevtranslationstable77FDC52D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "traduire-gpt-dev-translations-table"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/translateTable/translateTable-ddb-traduire-gpt-dev-translations-table/Resource"
   }
  },
  "translateslackintegrationtraduiregptdevslackIntegrationlambdaServiceRoleC60B66AC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/translate-slack-integration/traduire-gpt-dev-slackIntegration-lambda/ServiceRole/Resource"
   }
  },
  "translateslackintegrationtraduiregptdevslackIntegrationlambdaServiceRoleDefaultPolicy884D9622": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "translateTabletranslateTableddbtraduiregptdevtranslationstable77FDC52D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "translateslackintegrationtraduiregptdevslackIntegrationlambdaServiceRoleDefaultPolicy884D9622",
    "Roles": [
     {
      "Ref": "translateslackintegrationtraduiregptdevslackIntegrationlambdaServiceRoleC60B66AC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/translate-slack-integration/traduire-gpt-dev-slackIntegration-lambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "translateslackintegrationtraduiregptdevslackIntegrationlambdaAE792318": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b1283c0e94af9c2c8461ccdb7b134634c1d09bab4ea2a3632f2ae5dec10375a6.zip"
    },
    "Environment": {
     "Variables": {
      "SLACK_SIGNING_SECRET": "6eac228e56bdaf409500d2e92ee039b0",
      "SLACK_BOT_TOKEN": "xoxb-6038606150656-6992869734356-3yju6d7AUb8wYAJLlUPLMUMp",
      "OPENAI_API_KEY": "sk-proj-8nlWJc73u4twjNsJJwvwT3BlbkFJlcfVYmXdMOqiq5yK7nze",
      "TABLE_NAME": {
       "Ref": "translateTabletranslateTableddbtraduiregptdevtranslationstable77FDC52D"
      },
      "STAGE": "dev",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "traduire-gpt-dev-slackIntegration-lambda",
    "Handler": "index.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "translateslackintegrationtraduiregptdevslackIntegrationlambdaServiceRoleC60B66AC",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "translateslackintegrationtraduiregptdevslackIntegrationlambdaServiceRoleDefaultPolicy884D9622",
    "translateslackintegrationtraduiregptdevslackIntegrationlambdaServiceRoleC60B66AC"
   ],
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/translate-slack-integration/traduire-gpt-dev-slackIntegration-lambda/Resource",
    "aws:asset:path": "asset.b1283c0e94af9c2c8461ccdb7b134634c1d09bab4ea2a3632f2ae5dec10375a6",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "apigatewayC5416F00": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "ApiKeySourceType": "HEADER",
    "Name": "traduire-gpt-dev-api-gateway"
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/Resource"
   }
  },
  "apigatewayDeployment1740854953a07d9bf835b90be90bede8930be90b": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "apigatewayC5416F00"
    }
   },
   "DependsOn": [
    "apigatewayOPTIONSA39488E2",
    "apigatewayslackOPTIONSE0E699FB",
    "apigatewayslackPOSTADA8C1D1",
    "apigatewayslack8360DB76"
   ],
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/Deployment/Resource"
   }
  },
  "apigatewayDeploymentStagedev1105A1C0": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "apigatewayDeployment1740854953a07d9bf835b90be90bede8930be90b"
    },
    "RestApiId": {
     "Ref": "apigatewayC5416F00"
    },
    "StageName": "dev"
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/DeploymentStage.dev/Resource"
   }
  },
  "apigatewayOPTIONSA39488E2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'*'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "apigatewayC5416F00",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "apigatewayC5416F00"
    }
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/Default/OPTIONS/Resource"
   }
  },
  "apigatewayslack8360DB76": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "apigatewayC5416F00",
      "RootResourceId"
     ]
    },
    "PathPart": "slack",
    "RestApiId": {
     "Ref": "apigatewayC5416F00"
    }
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/Default/slack/Resource"
   }
  },
  "apigatewayslackOPTIONSE0E699FB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'*'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "apigatewayslack8360DB76"
    },
    "RestApiId": {
     "Ref": "apigatewayC5416F00"
    }
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/Default/slack/OPTIONS/Resource"
   }
  },
  "apigatewayslackPOSTApiPermissiondevtraduiregptapigateway67346520POSTslack65509A7C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "translateslackintegrationtraduiregptdevslackIntegrationlambdaAE792318",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apigatewayC5416F00"
       },
       "/",
       {
        "Ref": "apigatewayDeploymentStagedev1105A1C0"
       },
       "/POST/slack"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/Default/slack/POST/ApiPermission.devtraduiregptapigateway67346520.POST..slack"
   }
  },
  "apigatewayslackPOSTApiPermissionTestdevtraduiregptapigateway67346520POSTslackC3AE02DD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "translateslackintegrationtraduiregptdevslackIntegrationlambdaAE792318",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apigatewayC5416F00"
       },
       "/test-invoke-stage/POST/slack"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/Default/slack/POST/ApiPermission.Test.devtraduiregptapigateway67346520.POST..slack"
   }
  },
  "apigatewayslackPOSTADA8C1D1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "translateslackintegrationtraduiregptdevslackIntegrationlambdaAE792318",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "apigatewayslack8360DB76"
    },
    "RestApiId": {
     "Ref": "apigatewayC5416F00"
    }
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/api-gateway/api-gateway/Default/slack/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01QS2/DIAz+Lb0T1maXXdtOu+2hbvfIAS9zEiAKZlUU5b8PSLZVQvoe2J8NpTyUpdzv4OoLpbuip1rO7wyqE9GqZj1ZME5H8wPqHsX502ayiB5MraGyTmPr5UuGp2AVk7OCwMj54taGjG+uJzUlubJF+PsKvEf28pggankKqkM+gcctXs6x4S81NeNoyPuoFgEDNcB4hSnOQs/HgfK4jT7i0LvJoOXk3qj4vCYvtpJY78KoMI99Rv5yOl1u7Pd2S858Wf7tvHsKItukmtfAQ+Db6sTPzmrivHX6MNn6u+/Dg4xnv2s9UTEGy2RQXlb8ATlLsGSXAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "dev-traduire-gpt/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "apigatewayEndpointCA362DA3": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "apigatewayC5416F00"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "apigatewayDeploymentStagedev1105A1C0"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}